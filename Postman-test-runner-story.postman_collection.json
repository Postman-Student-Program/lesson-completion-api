{
	"info": {
		"_postman_id": "ff5f926a-b733-4e95-b453-00de2d465300",
		"name": "Admin API test runner story",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "get TRs (401 unauthorized)",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/admin/test_registrations",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"admin",
						"test_registrations"
					],
					"query": [
						{
							"key": "publishedCourseId",
							"value": "2q2jokzsn62y8",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "get TRs (200 OK)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"const body = pm.response.json()",
							"pm.test(\"Response is an array\", function () {",
							"    pm.expect(Array.isArray(body)).to.eql(true);",
							"});",
							"",
							"pm.collectionVariables.set(\"prevLength\", body.length)"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "value",
							"value": "{{apikey}}",
							"type": "string"
						},
						{
							"key": "key",
							"value": "apikey",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/admin/test_registrations",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"admin",
						"test_registrations"
					]
				}
			},
			"response": []
		},
		{
			"name": "Add TR (401 unauthorized)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 401\", function () {",
							"    pm.response.to.have.status(401);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"foo\",\n    \"publishedCourseId\": \"foo\",\n    \"lessonId\": \"foo\",\n    \"postmanTestCollectionJsonUrl\": \"foo\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/admin/test_registrations",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"admin",
						"test_registrations"
					]
				}
			},
			"response": []
		},
		{
			"name": "Add TR (400 missing input)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {",
							"    pm.response.to.have.status(400);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"foo\",\n    \"publishedCourseId\": \"foo\",\n    \"lessonId\": \"foo\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/admin/test_registrations",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"admin",
						"test_registrations"
					]
				}
			},
			"response": []
		},
		{
			"name": "Add TR (201 OK)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"const body = pm.response.json()",
							"",
							"const id = `${body.publishedCourseId}:${body.lessonId}`",
							"pm.collectionVariables.set(\"id\", id)"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "value",
							"value": "{{apikey}}",
							"type": "string"
						},
						{
							"key": "key",
							"value": "apikey",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"foo\",\n    \"publishedCourseId\": \"{{$randomWord}}\",\n    \"lessonId\": \"{{$randomWord}}\",\n    \"postmanTestCollectionJsonUrl\": \"http://foo.foo\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/admin/test_registrations",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"admin",
						"test_registrations"
					]
				}
			},
			"response": []
		},
		{
			"name": "Add TR (409 Conflict)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 409\", function () {",
							"    pm.response.to.have.status(409);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "value",
							"value": "{{apikey}}",
							"type": "string"
						},
						{
							"key": "key",
							"value": "apikey",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"foo\",\n    \"publishedCourseId\": \"foo\",\n    \"lessonId\": \"foo\",\n    \"postmanTestCollectionJsonUrl\": \"http://foo.foo\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/admin/test_registrations",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"admin",
						"test_registrations"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get TRs again (200 OK)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"const body = pm.response.json()",
							"",
							"const prevLength = parseInt(pm.collectionVariables.get(\"prevLength\"))",
							"",
							"pm.test(\"Response length should increase by one\", function () {",
							"    pm.expect(body.length).to.eql(prevLength + 1);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "value",
							"value": "{{apikey}}",
							"type": "string"
						},
						{
							"key": "key",
							"value": "apikey",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"foo\",\n    \"publishedCourseId\": \"foo\",\n    \"lessonId\": \"foo\",\n    \"postmanTestCollectionJsonUrl\": \"http://foo.foo\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/admin/test_registrations",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"admin",
						"test_registrations"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get TR (401 Unauthorized)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 401\", function () {",
							"    pm.response.to.have.status(401);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/admin/test_registrations/:id",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"admin",
						"test_registrations",
						":id"
					],
					"variable": [
						{
							"key": "id",
							"value": "{{id}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Update TR (401 Unauthorized)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 401\", function () {",
							"    pm.response.to.have.status(401);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"updated\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/admin/test_registrations/:id",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"admin",
						"test_registrations",
						":id"
					],
					"variable": [
						{
							"key": "id",
							"value": "{{id}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Update TR (400 Unrecognized prop)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "value",
							"value": "{{apikey}}",
							"type": "string"
						},
						{
							"key": "key",
							"value": "apikey",
							"type": "string"
						}
					]
				},
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"foo\": \"updated\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/admin/test_registrations/:id",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"admin",
						"test_registrations",
						":id"
					],
					"variable": [
						{
							"key": "id",
							"value": "{{id}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Update TR (200 OK)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "value",
							"value": "{{apikey}}",
							"type": "string"
						},
						{
							"key": "key",
							"value": "apikey",
							"type": "string"
						}
					]
				},
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"updated\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/admin/test_registrations/:id",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"admin",
						"test_registrations",
						":id"
					],
					"variable": [
						{
							"key": "id",
							"value": "{{id}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Del TR (204 OK)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {",
							"    pm.response.to.have.status(204);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "value",
							"value": "{{apikey}}",
							"type": "string"
						},
						{
							"key": "key",
							"value": "apikey",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/admin/test_registrations/:id",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"admin",
						"test_registrations",
						":id"
					],
					"variable": [
						{
							"key": "id",
							"value": "{{id}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get TR (404 Not Found)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 401\", function () {",
							"    pm.response.to.have.status(401);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/admin/test_registrations/:id",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"admin",
						"test_registrations",
						":id"
					],
					"variable": [
						{
							"key": "id",
							"value": "{{id}}"
						}
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:4000",
			"type": "string"
		},
		{
			"key": "apikey",
			"value": "",
			"type": "string"
		},
		{
			"key": "id",
			"value": ""
		},
		{
			"key": "prevLength",
			"value": ""
		}
	]
}